/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package iniciosecion.ejemploclase07;

/**
 *
 * @author Pacos
 */
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class Vista extends javax.swing.JFrame {

    /**
     * Creates new form Vista
     */
    private String rutaInicial; // Ruta de nuestra carpeta raiz
    private String rutaGuardarArchivo; // Ruta que se usará para ubicación del archivo
    public Vista() {
        initComponents();
        this.rutaInicial = System.getProperty("user.dir"); // Ubicación de la carpeta del proyecto
        File carpetaACrear = new File(this.rutaInicial, "/reportes");
        if(carpetaACrear.exists()) { // Si nuestra existe
            System.out.println("Carpeta existente");
        }
        
        if(carpetaACrear.mkdir()) {
            System.out.println("Carpeta creada exitosamente: " + carpetaACrear.getAbsolutePath());
            this.rutaGuardarArchivo = this.rutaInicial + "/reportes/";
        } else {
            System.out.println("Error en la creación de la carpeta");
            this.rutaGuardarArchivo = this.rutaInicial + "/reportes/";
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        buscarImagen = new javax.swing.JButton();
        imagenPath = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nombreArchivo = new javax.swing.JTextField();
        generarPDF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Buscar Imagen");

        buscarImagen.setText("Seleccionar Imagen");
        buscarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarImagenActionPerformed(evt);
            }
        });

        imagenPath.setEditable(false);

        jLabel2.setText("Nombre Archivo");

        generarPDF.setText("Guardar PDF");
        generarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(buscarImagen)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(imagenPath)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(33, 33, 33)
                            .addComponent(nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(33, 33, 33)
                            .addComponent(generarPDF))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buscarImagen))
                .addGap(33, 33, 33)
                .addComponent(imagenPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generarPDF)
                    .addComponent(nombreArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarImagenActionPerformed
        // Boton para abrir explorador para buscar imágenes
        JFileChooser buscador = new JFileChooser();
        buscador.setDialogTitle("Seleccione una imagen");
        
        // Filtro de archivos
        buscador.setFileFilter(new javax.swing.filechooser.FileFilter() {
            @Override
            public boolean accept(File f) {
                String nombre = f.getName().toLowerCase();
                // definimos el tipo de archivos a aceptar
                return f.isDirectory() || nombre.endsWith(".jpg") || nombre.endsWith(".jpeg") ||
                        nombre.endsWith(".png") || nombre.endsWith(".svg"); 
            }

            @Override
            public String getDescription() {
                // definimos etiqueta
                return "Archivos de imagen (*.jpg, *.jpeg, *.png, *.svg)";
            }
        });
        
        int resultado = buscador.showOpenDialog(this);
        
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivoSeleccionado = buscador.getSelectedFile();
            String path = archivoSeleccionado.getAbsolutePath();
            
            this.imagenPath.setText(path);
            JOptionPane.showMessageDialog(this, "Imagen seleccionada: " + path);
        }
    }//GEN-LAST:event_buscarImagenActionPerformed

    private void generarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarPDFActionPerformed
        // Generación de PDF
        String [] encabezados = {"UFO SHAPE", "COUNT"};
        String [][] data = {
            { "Gatos", "9" },
            { "Perros", "5" },
            { "Aves", "2" },
            { "Pescados", "1" }
        };
        
        if(!this.nombreArchivo.getText().isEmpty()) {
            String nombre = this.nombreArchivo.getText();
            if(!nombre.toLowerCase().endsWith(".pdf")) {
                nombre = nombre + ".pdf";
                this.nombreArchivo.setText(nombre);
            }
        } else {
            JOptionPane.showMessageDialog(this, "El campo de nombre para el archivo está vacío", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        try {
            GeneradorPDF pdf = new GeneradorPDF();
            pdf.generarPDF(this.rutaGuardarArchivo + this.nombreArchivo.getText(), encabezados, data, this.imagenPath.getText(), "Haciendo una prueba para la página siguiente", "Haciendo una prueba para la página final");
            System.out.println("Archivo creado exitosamente: " + this.rutaGuardarArchivo + this.nombreArchivo.getText());
        } catch(MalformedURLException e) {
            System.out.println("Ruta invalida");
            e.printStackTrace();
        } catch(IOException ex) {
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generarPDFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarImagen;
    private javax.swing.JButton generarPDF;
    private javax.swing.JTextField imagenPath;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nombreArchivo;
    // End of variables declaration//GEN-END:variables
}
